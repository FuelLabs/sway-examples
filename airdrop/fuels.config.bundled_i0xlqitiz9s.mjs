// fuels.config.ts
import { createConfig } from "fuels";
import dotenv from "dotenv";

// src/lib.ts
import { TESTNET_NETWORK_URL } from "fuels";
var Environments = {
  LOCAL: "local",
  TESTNET: "testnet"
};
var CURRENT_ENVIRONMENT = process.env.VITE_DAPP_DAPP_ENVIRONMENT || Environments.LOCAL;
var NODE_URL = CURRENT_ENVIRONMENT === Environments.LOCAL ? `http://127.0.0.1:${process.env.VITE_FUEL_NODE_PORT || 4e3}/v1/graphql` : TESTNET_NETWORK_URL;
var TESTNET_FAUCET_LINK = "https://faucet-testnet.fuel.network/";
var FAUCET_LINK = CURRENT_ENVIRONMENT === Environments.LOCAL ? "/faucet" : TESTNET_FAUCET_LINK;
var GATEWAY_URL = process.env.VITE_DAPP_GATEWAY_URL ? process.env.VITE_DAPP_GATEWAY_URL : "https://beige-ready-porcupine-957.mypinata.cloud";
var PINATA_JWT = process.env.VITE_DAPP_PINATA_JWT;

// fuels.config.ts
dotenv.config({
  path: [".env.local", ".env"]
});
var fuelCorePort = +process.env.VITE_FUEL_NODE_PORT || 4e3;
var fuels_config_default = createConfig({
  workspace: "./sway-programs",
  // Path to your Sway workspace
  output: "./src/sway-api",
  // Where your generated types will be saved
  fuelCorePort,
  providerUrl: NODE_URL
});
export {
  fuels_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZnVlbHMuY29uZmlnLnRzIiwgInNyYy9saWIudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL1VzZXJzL25hemVlaC9jb2RlL3N3YXktZXhhbXBsZXMvYWlyZHJvcC9mdWVscy5jb25maWcudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiL1VzZXJzL25hemVlaC9jb2RlL3N3YXktZXhhbXBsZXMvYWlyZHJvcFwiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vVXNlcnMvbmF6ZWVoL2NvZGUvc3dheS1leGFtcGxlcy9haXJkcm9wL2Z1ZWxzLmNvbmZpZy50c1wiO2ltcG9ydCB7IGNyZWF0ZUNvbmZpZyB9IGZyb20gJ2Z1ZWxzJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcbmltcG9ydCB7IE5PREVfVVJMIH0gZnJvbSAnLi9zcmMvbGliJztcblxuZG90ZW52LmNvbmZpZyh7XG4gIHBhdGg6IFsnLmVudi5sb2NhbCcsICcuZW52J10sXG59KTtcblxuLy8gSWYgeW91ciBub2RlIGlzIHJ1bm5pbmcgb24gYSBwb3J0IG90aGVyIHRoYW4gNDAwMCwgeW91IGNhbiBzZXQgaXQgaGVyZVxuY29uc3QgZnVlbENvcmVQb3J0ID0gKyhwcm9jZXNzLmVudi5WSVRFX0ZVRUxfTk9ERV9QT1JUIGFzIHN0cmluZykgfHwgNDAwMDtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ29uZmlnKHtcbiAgd29ya3NwYWNlOiAnLi9zd2F5LXByb2dyYW1zJywgLy8gUGF0aCB0byB5b3VyIFN3YXkgd29ya3NwYWNlXG4gIG91dHB1dDogJy4vc3JjL3N3YXktYXBpJywgLy8gV2hlcmUgeW91ciBnZW5lcmF0ZWQgdHlwZXMgd2lsbCBiZSBzYXZlZFxuICBmdWVsQ29yZVBvcnQsXG4gIHByb3ZpZGVyVXJsOiBOT0RFX1VSTCxcbn0pO1xuIiwgImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL1VzZXJzL25hemVlaC9jb2RlL3N3YXktZXhhbXBsZXMvYWlyZHJvcC9zcmMvbGliLnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIi9Vc2Vycy9uYXplZWgvY29kZS9zd2F5LWV4YW1wbGVzL2FpcmRyb3Avc3JjXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9Vc2Vycy9uYXplZWgvY29kZS9zd2F5LWV4YW1wbGVzL2FpcmRyb3Avc3JjL2xpYi50c1wiO2ltcG9ydCB7IEFjY291bnQsIEJOLCBURVNUTkVUX05FVFdPUktfVVJMIH0gZnJvbSAnZnVlbHMnO1xuXG4vLyBUaGUgdHdvIGVudmlyb25tZW50cyBmb3IgdGhlIGRhcHAgYXJlIGxvY2FsIGFuZCB0ZXN0bmV0LlxuZXhwb3J0IGNvbnN0IEVudmlyb25tZW50cyA9IHtcbiAgTE9DQUw6ICdsb2NhbCcsXG4gIFRFU1RORVQ6ICd0ZXN0bmV0Jyxcbn0gYXMgY29uc3Q7XG50eXBlIEVudmlyb25tZW50ID0gKHR5cGVvZiBFbnZpcm9ubWVudHMpW2tleW9mIHR5cGVvZiBFbnZpcm9ubWVudHNdO1xuXG4vKipcbiAqIFRoZSBjdXJyZW50IGVudmlyb25tZW50IGlzIGRldGVybWluZWQgYnkgdGhlXG4gKiBgVklURV9EQVBQX0RBUFBfRU5WSVJPTk1FTlRgIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICogSWYgaXQncyBub3Qgc2V0LCB0aGUgZGVmYXVsdCBpcyBgbG9jYWxgLlxuICovXG5leHBvcnQgY29uc3QgQ1VSUkVOVF9FTlZJUk9OTUVOVDogRW52aXJvbm1lbnQgPVxuICAocHJvY2Vzcy5lbnYuVklURV9EQVBQX0RBUFBfRU5WSVJPTk1FTlQgYXMgRW52aXJvbm1lbnQpIHx8IEVudmlyb25tZW50cy5MT0NBTDtcblxuLy8gVGhlIG5vZGUgVVJMIGlzIGRldGVybWluZWQgYnkgdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQgdG9vLlxuZXhwb3J0IGNvbnN0IE5PREVfVVJMID1cbiAgQ1VSUkVOVF9FTlZJUk9OTUVOVCA9PT0gRW52aXJvbm1lbnRzLkxPQ0FMXG4gICAgPyBgaHR0cDovLzEyNy4wLjAuMToke3Byb2Nlc3MuZW52LlZJVEVfRlVFTF9OT0RFX1BPUlQgfHwgNDAwMH0vdjEvZ3JhcGhxbGBcbiAgICA6IFRFU1RORVRfTkVUV09SS19VUkw7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwV2FsbGV0IHtcbiAgd2FsbGV0PzogQWNjb3VudDtcbiAgd2FsbGV0QmFsYW5jZT86IEJOO1xuICByZWZyZXNoV2FsbGV0QmFsYW5jZT86ICgpID0+IFByb21pc2U8dm9pZD47XG59XG5cbmV4cG9ydCBjb25zdCBURVNUTkVUX0ZBVUNFVF9MSU5LID0gJ2h0dHBzOi8vZmF1Y2V0LXRlc3RuZXQuZnVlbC5uZXR3b3JrLyc7XG5cbmV4cG9ydCBjb25zdCBGQVVDRVRfTElOSyA9XG4gIENVUlJFTlRfRU5WSVJPTk1FTlQgPT09IEVudmlyb25tZW50cy5MT0NBTCA/ICcvZmF1Y2V0JyA6IFRFU1RORVRfRkFVQ0VUX0xJTks7XG5cbmV4cG9ydCBjb25zdCBGQVVDRVRfUFJJVkFURV9LRVkgPSAnMHgwMSc7XG5cbmV4cG9ydCBjb25zdCBET0NTX1VSTCA9ICdodHRwczovL2RvY3MuZnVlbC5uZXR3b3JrJztcblxuZXhwb3J0IGNvbnN0IEdBVEVXQVlfVVJMID0gcHJvY2Vzcy5lbnYuVklURV9EQVBQX0dBVEVXQVlfVVJMXG4gID8gcHJvY2Vzcy5lbnYuVklURV9EQVBQX0dBVEVXQVlfVVJMXG4gIDogXCJodHRwczovL2JlaWdlLXJlYWR5LXBvcmN1cGluZS05NTcubXlwaW5hdGEuY2xvdWRcIjtcblxuZXhwb3J0IGNvbnN0IFBJTkFUQV9KV1QgPSBwcm9jZXNzLmVudi5WSVRFX0RBUFBfUElOQVRBX0pXVDtcblxuZXhwb3J0IGNvbnN0IFBJTkFUQV9BUElfVVJMPVwiaHR0cHM6Ly9hcGkucGluYXRhLmNsb3VkXCIiXSwKICAibWFwcGluZ3MiOiAiO0FBQXdRLFNBQVMsb0JBQW9CO0FBQ3JTLE9BQU8sWUFBWTs7O0FDRCtPLFNBQXNCLDJCQUEyQjtBQUc1UyxJQUFNLGVBQWU7QUFBQSxFQUMxQixPQUFPO0FBQUEsRUFDUCxTQUFTO0FBQ1g7QUFRTyxJQUFNLHNCQUNWLFFBQVEsSUFBSSw4QkFBOEMsYUFBYTtBQUduRSxJQUFNLFdBQ1gsd0JBQXdCLGFBQWEsUUFDakMsb0JBQW9CLFFBQVEsSUFBSSx1QkFBdUIsR0FBSSxnQkFDM0Q7QUFRQyxJQUFNLHNCQUFzQjtBQUU1QixJQUFNLGNBQ1gsd0JBQXdCLGFBQWEsUUFBUSxZQUFZO0FBTXBELElBQU0sY0FBYyxRQUFRLElBQUksd0JBQ25DLFFBQVEsSUFBSSx3QkFDWjtBQUVHLElBQU0sYUFBYSxRQUFRLElBQUk7OztBRHRDdEMsT0FBTyxPQUFPO0FBQUEsRUFDWixNQUFNLENBQUMsY0FBYyxNQUFNO0FBQzdCLENBQUM7QUFHRCxJQUFNLGVBQWUsQ0FBRSxRQUFRLElBQUksdUJBQWtDO0FBRXJFLElBQU8sdUJBQVEsYUFBYTtBQUFBLEVBQzFCLFdBQVc7QUFBQTtBQUFBLEVBQ1gsUUFBUTtBQUFBO0FBQUEsRUFDUjtBQUFBLEVBQ0EsYUFBYTtBQUNmLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
